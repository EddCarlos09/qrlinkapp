{"ast":null,"code":"var _jsxFileName = \"D:\\\\qrlinkapp\\\\src\\\\components\\\\KeyRedirect.js\",\n  _s = $RefreshSig$();\n// src/components/KeyRedirect.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport httpService from '../services/httpService';\nimport Spinner from './utils/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeyRedirect = () => {\n  _s();\n  const {\n    key\n  } = useParams();\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let isCancelled = false;\n    const resolveAndRedirect = async () => {\n      try {\n        var _response$data, _response$data2;\n        const response = await httpService.get(`/QRUtils/resolvekey?key=${key}`);\n        const redirectUrl = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.url) || ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.Url);\n        if (!isCancelled) {\n          if (redirectUrl) {\n            window.location.href = redirectUrl; // redirección directa\n          } else {\n            setError('No se encontró la URL de redirección.');\n          }\n        }\n      } catch (err) {\n        if (!isCancelled) {\n          var _err$response;\n          if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 404) {\n            setError('El enlace no existe o ha expirado.');\n          } else {\n            setError('Ocurrió un error al procesar la redirección.');\n          }\n        }\n      }\n    };\n    resolveAndRedirect();\n    return () => {\n      isCancelled = true;\n    };\n  }, [key]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-screen text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-red-600\",\n        children: \"\\xA1Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-gray-700\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-6 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\",\n        onClick: () => navigate('/'),\n        children: \"Volver al inicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(KeyRedirect, \"eXLmI4yP8ieSLjkhWTOHAqOZFTg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = KeyRedirect;\nexport default KeyRedirect;\nvar _c;\n$RefreshReg$(_c, \"KeyRedirect\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","httpService","Spinner","jsxDEV","_jsxDEV","KeyRedirect","_s","key","navigate","error","setError","isCancelled","resolveAndRedirect","_response$data","_response$data2","response","get","redirectUrl","data","url","Url","window","location","href","err","_err$response","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/qrlinkapp/src/components/KeyRedirect.js"],"sourcesContent":["// src/components/KeyRedirect.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport httpService from '../services/httpService';\r\nimport Spinner from './utils/Spinner';\r\n\r\nconst KeyRedirect = () => {\r\n  const { key } = useParams();\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let isCancelled = false;\r\n\r\n    const resolveAndRedirect = async () => {\r\n      try {\r\n        const response = await httpService.get(`/QRUtils/resolvekey?key=${key}`);\r\n        const redirectUrl = response.data?.url || response.data?.Url;\r\n\r\n        if (!isCancelled) {\r\n          if (redirectUrl) {\r\n            window.location.href = redirectUrl; // redirección directa\r\n          } else {\r\n            setError('No se encontró la URL de redirección.');\r\n          }\r\n        }\r\n      } catch (err) {\r\n        if (!isCancelled) {\r\n          if (err.response?.status === 404) {\r\n            setError('El enlace no existe o ha expirado.');\r\n          } else {\r\n            setError('Ocurrió un error al procesar la redirección.');\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    resolveAndRedirect();\r\n\r\n    return () => {\r\n      isCancelled = true;\r\n    };\r\n  }, [key]);\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-screen text-center\">\r\n        <h1 className=\"text-2xl font-bold text-red-600\">¡Error!</h1>\r\n        <p className=\"mt-4 text-gray-700\">{error}</p>\r\n        <button\r\n          className=\"mt-6 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\r\n          onClick={() => navigate('/')}\r\n        >\r\n          Volver al inicio\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center h-screen\">\r\n      <Spinner />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeyRedirect;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}