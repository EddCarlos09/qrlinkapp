{"ast":null,"code":"// src/utils/httpprocesscommon.js\nconst BASE_URL = 'https://localhost:7149/api'; // ← cambia esta URL a la de tu backend\n\nexport const httpPost = async (endpoint, body) => {\n  try {\n    const response = await fetch(`${BASE_URL}/${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Ocurrió un error en la petición');\n    }\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","httpPost","endpoint","body","response","fetch","method","headers","JSON","stringify","data","json","ok","Error","message","error"],"sources":["D:/qrlinkapp/src/utils/httpprocesscommon.js"],"sourcesContent":["// src/utils/httpprocesscommon.js\r\nconst BASE_URL = 'https://localhost:7149/api'; // ← cambia esta URL a la de tu backend\r\n\r\nexport const httpPost = async (endpoint, body) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${endpoint}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Ocurrió un error en la petición');\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,4BAA4B,CAAC,CAAC;;AAE/C,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,KAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,IAAIE,QAAQ,EAAE,EAAE;MACtDI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC;IAEF,MAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,iCAAiC,CAAC;IACpE;IAEA,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}