{"ast":null,"code":"var _jsxFileName = \"D:\\\\qrlinkapp\\\\src\\\\components\\\\Folder\\\\PaginatedFolderGrid.js\",\n  _s = $RefreshSig$();\n// src/components/PaginatedFolderGrid.js\nimport React, { useState, useEffect } from 'react';\nimport FolderCard from './FolderCard';\nimport Spinner from '../utils/Spinner';\nimport httpService from '../../services/httpService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaginatedFolderGrid = ({\n  onEdit,\n  onDelete,\n  shouldReload,\n  onReloaded\n}) => {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [limit] = useState(6);\n  const [totalPages, setTotalPages] = useState(1);\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n      const response = await httpService.get(`/folder/paged?page=${page}&pageSize=${limit}`);\n      setFolders(response.data.data);\n      setTotalPages(response.data.totalPages);\n    } catch (error) {\n      var _error$response;\n      const msg = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n      if (msg === 'Page number exceeds total pages.' && page > 1) {\n        setPage(prev => prev - 1);\n        return;\n      }\n      console.error('Error al obtener carpetas:', error.message);\n    } finally {\n      setLoading(false);\n      if (shouldReload && onReloaded) {\n        onReloaded();\n      }\n    }\n  };\n\n  // Actualización del nombre de la carpeta\n  const handleUpdateFolderName = async updatedFolder => {\n    try {\n      console.log(updatedFolder);\n      const response = await httpService.put(`/folder/${updatedFolder.id}`, {\n        updatedItem: updatedFolder\n      });\n      if (response.status === 200) {\n        // Actualiza la carpeta en el estado sin hacer una recarga completa\n        setFolders(prevFolders => prevFolders.map(folder => folder.id === updatedFolder.id ? {\n          ...folder,\n          folderName: updatedFolder.folderName\n        } : folder));\n      }\n    } catch (error) {\n      console.error('Error al actualizar el nombre de la carpeta:', error);\n    }\n  };\n  useEffect(() => {\n    fetchFolders();\n  }, [page, shouldReload]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : folders.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(FolderCard, {\n          id: folder.id,\n          name: folder.folderName,\n          onEdit: updateItem => handleUpdateFolderName(updateItem),\n          onDelete: () => onDelete(folder)\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-6 space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(prev => Math.max(prev - 1, 1)),\n          disabled: page === 1,\n          className: \"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-4 py-2 text-gray-700\",\n          children: [\"P\\xE1gina \", page, \" de \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(prev => Math.min(prev + 1, totalPages)),\n          disabled: page === totalPages,\n          className: \"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\",\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600 mt-6\",\n      children: \"No hay elementos a\\xFAn.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(PaginatedFolderGrid, \"SKuxHSFrp0LGu+3zUYi2rozbXB0=\");\n_c = PaginatedFolderGrid;\nexport default PaginatedFolderGrid;\nvar _c;\n$RefreshReg$(_c, \"PaginatedFolderGrid\");","map":{"version":3,"names":["React","useState","useEffect","FolderCard","Spinner","httpService","jsxDEV","_jsxDEV","Fragment","_Fragment","PaginatedFolderGrid","onEdit","onDelete","shouldReload","onReloaded","_s","folders","setFolders","loading","setLoading","page","setPage","limit","totalPages","setTotalPages","fetchFolders","response","get","data","error","_error$response","msg","prev","console","message","handleUpdateFolderName","updatedFolder","log","put","id","updatedItem","status","prevFolders","map","folder","folderName","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","name","updateItem","onClick","Math","max","disabled","min","_c","$RefreshReg$"],"sources":["D:/qrlinkapp/src/components/Folder/PaginatedFolderGrid.js"],"sourcesContent":["// src/components/PaginatedFolderGrid.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport FolderCard from './FolderCard';\r\nimport Spinner from '../utils/Spinner';\r\nimport httpService from '../../services/httpService';\r\n\r\nconst PaginatedFolderGrid = ({ onEdit, onDelete, shouldReload, onReloaded }) => {\r\n  const [folders, setFolders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [limit] = useState(6);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  const fetchFolders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await httpService.get(`/folder/paged?page=${page}&pageSize=${limit}`);\r\n      setFolders(response.data.data);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {\r\n      const msg = error?.response?.data;\r\n      if (msg === 'Page number exceeds total pages.' && page > 1) {\r\n        setPage((prev) => prev - 1);\r\n        return;\r\n      }\r\n      console.error('Error al obtener carpetas:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n      if (shouldReload && onReloaded) {\r\n        onReloaded();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Actualización del nombre de la carpeta\r\n  const handleUpdateFolderName = async (updatedFolder) => {\r\n    try {\r\n      console.log(updatedFolder);\r\n      const response = await httpService.put(`/folder/${updatedFolder.id}`, {\r\n        updatedItem: updatedFolder,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Actualiza la carpeta en el estado sin hacer una recarga completa\r\n        setFolders((prevFolders) =>\r\n          prevFolders.map((folder) =>\r\n            folder.id === updatedFolder.id ? { ...folder, folderName: updatedFolder.folderName } : folder\r\n          )\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al actualizar el nombre de la carpeta:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFolders();\r\n  }, [page, shouldReload]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : folders.length > 0 ? (\r\n        <>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {folders.map((folder) => (\r\n              <FolderCard\r\n                key={folder.id}\r\n                id={folder.id}  \r\n                name={folder.folderName}\r\n                onEdit={(updateItem) => handleUpdateFolderName(updateItem)}\r\n                onDelete={() => onDelete(folder)}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          {/* Paginación */}\r\n          <div className=\"flex justify-center mt-6 space-x-4\">\r\n            <button\r\n              onClick={() => setPage((prev) => Math.max(prev - 1, 1))}\r\n              disabled={page === 1}\r\n              className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n            >\r\n              Anterior\r\n            </button>\r\n            <span className=\"px-4 py-2 text-gray-700\">\r\n              Página {page} de {totalPages}\r\n            </span>\r\n            <button\r\n              onClick={() => setPage((prev) => Math.min(prev + 1, totalPages))}\r\n              disabled={page === totalPages}\r\n              className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n            >\r\n              Siguiente\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p className=\"text-center text-gray-600 mt-6\">No hay elementos aún.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginatedFolderGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}