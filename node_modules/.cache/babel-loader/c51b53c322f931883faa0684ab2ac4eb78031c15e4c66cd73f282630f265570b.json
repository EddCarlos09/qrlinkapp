{"ast":null,"code":"var _jsxFileName = \"D:\\\\qrlinkapp\\\\src\\\\components\\\\QR\\\\PaginatedQRGrid.js\";\n// import React, { useEffect, useState } from 'react';\n// import QRCodeCard from './QRCodeCard';\n// import Spinner from '../utils/Spinner';\n// import httpService from '../../services/httpService';\n\n// const PaginatedQRGrid = ({ onEdit, onDelete, shouldReload, onReloaded }) => {\n//   const [qrCodes, setQrCodes] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [page, setPage] = useState(1);\n//   const [limit] = useState(6);\n//   const [totalPages, setTotalPages] = useState(1);\n\n//   const obtenerQRCodes = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await httpService.get(`/qrlink/paged?page=${page}&pageSize=${limit}`);\n//       setQrCodes(response.data.data); \n//       setTotalPages(response.data.totalPages);\n//     } catch (error) {\n//       const mensajeError = error?.response?.data;\n\n//       if (\n//         mensajeError === 'Page number exceeds total pages.' &&\n//         page > 1\n//       ) {\n//         //Intentó ir a una página inválida, retroceder\n//         setPage((prev) => prev - 1);\n//         return;\n//       }\n//       console.error('Error al obtener los códigos QR:', error.message);\n//     } finally {\n//       setLoading(false);\n//       if (shouldReload && onReloaded) {\n//         onReloaded(); // <-- Limpiar bandera en el padre\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     obtenerQRCodes();\n//   }, [page, shouldReload]);\n\n//   return (\n//     <div>\n//       {loading ? (\n//         <Spinner />\n//       ) : qrCodes.length > 0 ? (\n//         <>\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n//             {qrCodes.map((qr) => (\n//               <QRCodeCard\n//                 key={qr.id}\n//                 id={qr.id}\n//                 alias={qr.alias}\n//                 url={qr.url}\n//                 short_url={qr.short_url}\n//                 scans={qr.scans}\n//                 fgColor={qr.fgColor}\n//                 bgColor={qr.bgColor}\n//                 size={qr.size}\n//                 onEdit={() => onEdit(qr)}\n//                 onDelete={() => onDelete(qr)}\n//               />\n//             ))}\n//           </div>\n\n//           {/* Paginación */}\n//           <div className=\"flex justify-center mt-6 space-x-4\">\n//             <button\n//               onClick={() => setPage((prev) => Math.max(prev - 1, 1))}\n//               disabled={page === 1}\n//               className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\"\n//             >\n//               Anterior\n//             </button>\n//             <span className=\"px-4 py-2 text-gray-700\">\n//               Página {page} de {totalPages}\n//             </span>\n//             <button\n//               onClick={() => setPage((prev) => Math.min(prev + 1, totalPages))}\n//               disabled={page === totalPages}\n//               className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\"\n//             >\n//               Siguiente\n//             </button>\n//           </div>\n//         </>\n//       ) : (\n//         <p>No hay códigos QR aún.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PaginatedQRGrid;\nimport React from 'react';\nimport QRCodeCard from './QRCodeCard';\nimport Spinner from '../utils/Spinner';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaginatedQRGrid = ({\n  data = [],\n  loading,\n  page,\n  totalPages,\n  onPageChange,\n  onEdit,\n  onDelete\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this) : data.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n        children: data.map(qr => /*#__PURE__*/_jsxDEV(QRCodeCard, {\n          id: qr.id,\n          alias: qr.alias,\n          url: qr.url,\n          short_url: qr.short_url,\n          scans: qr.scans,\n          fgColor: qr.fgColor,\n          bgColor: qr.bgColor,\n          size: qr.size,\n          onEdit: () => onEdit(qr),\n          onDelete: () => onDelete(qr)\n        }, qr.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-6 space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onPageChange(Math.max(page - 1, 1)),\n          disabled: page === 1,\n          className: \"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-4 py-2 text-gray-700\",\n          children: [\"P\\xE1gina \", page, \" de \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onPageChange(Math.min(page + 1, totalPages)),\n          disabled: page === totalPages,\n          className: \"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\",\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600 mt-6\",\n      children: \"No hay c\\xF3digos QR a\\xFAn.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_c = PaginatedQRGrid;\nexport default PaginatedQRGrid;\nvar _c;\n$RefreshReg$(_c, \"PaginatedQRGrid\");","map":{"version":3,"names":["React","QRCodeCard","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","PaginatedQRGrid","data","loading","page","totalPages","onPageChange","onEdit","onDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","qr","id","alias","url","short_url","scans","fgColor","bgColor","size","onClick","Math","max","disabled","min","_c","$RefreshReg$"],"sources":["D:/qrlinkapp/src/components/QR/PaginatedQRGrid.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import QRCodeCard from './QRCodeCard';\r\n// import Spinner from '../utils/Spinner';\r\n// import httpService from '../../services/httpService';\r\n\r\n\r\n// const PaginatedQRGrid = ({ onEdit, onDelete, shouldReload, onReloaded }) => {\r\n//   const [qrCodes, setQrCodes] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [page, setPage] = useState(1);\r\n//   const [limit] = useState(6);\r\n//   const [totalPages, setTotalPages] = useState(1);\r\n\r\n//   const obtenerQRCodes = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await httpService.get(`/qrlink/paged?page=${page}&pageSize=${limit}`);\r\n//       setQrCodes(response.data.data); \r\n//       setTotalPages(response.data.totalPages);\r\n//     } catch (error) {\r\n//       const mensajeError = error?.response?.data;\r\n\r\n//       if (\r\n//         mensajeError === 'Page number exceeds total pages.' &&\r\n//         page > 1\r\n//       ) {\r\n//         //Intentó ir a una página inválida, retroceder\r\n//         setPage((prev) => prev - 1);\r\n//         return;\r\n//       }\r\n//       console.error('Error al obtener los códigos QR:', error.message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//       if (shouldReload && onReloaded) {\r\n//         onReloaded(); // <-- Limpiar bandera en el padre\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     obtenerQRCodes();\r\n//   }, [page, shouldReload]);\r\n\r\n//   return (\r\n//     <div>\r\n//       {loading ? (\r\n//         <Spinner />\r\n//       ) : qrCodes.length > 0 ? (\r\n//         <>\r\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n//             {qrCodes.map((qr) => (\r\n//               <QRCodeCard\r\n//                 key={qr.id}\r\n//                 id={qr.id}\r\n//                 alias={qr.alias}\r\n//                 url={qr.url}\r\n//                 short_url={qr.short_url}\r\n//                 scans={qr.scans}\r\n//                 fgColor={qr.fgColor}\r\n//                 bgColor={qr.bgColor}\r\n//                 size={qr.size}\r\n//                 onEdit={() => onEdit(qr)}\r\n//                 onDelete={() => onDelete(qr)}\r\n//               />\r\n//             ))}\r\n//           </div>\r\n\r\n//           {/* Paginación */}\r\n//           <div className=\"flex justify-center mt-6 space-x-4\">\r\n//             <button\r\n//               onClick={() => setPage((prev) => Math.max(prev - 1, 1))}\r\n//               disabled={page === 1}\r\n//               className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n//             >\r\n//               Anterior\r\n//             </button>\r\n//             <span className=\"px-4 py-2 text-gray-700\">\r\n//               Página {page} de {totalPages}\r\n//             </span>\r\n//             <button\r\n//               onClick={() => setPage((prev) => Math.min(prev + 1, totalPages))}\r\n//               disabled={page === totalPages}\r\n//               className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n//             >\r\n//               Siguiente\r\n//             </button>\r\n//           </div>\r\n//         </>\r\n//       ) : (\r\n//         <p>No hay códigos QR aún.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PaginatedQRGrid;\r\nimport React from 'react';\r\nimport QRCodeCard from './QRCodeCard';\r\nimport Spinner from '../utils/Spinner';\r\n\r\nconst PaginatedQRGrid = ({\r\n  data = [],\r\n  loading,\r\n  page,\r\n  totalPages,\r\n  onPageChange,\r\n  onEdit,\r\n  onDelete,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : data.length > 0 ? (\r\n        <>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {data.map((qr) => (\r\n              <QRCodeCard\r\n                key={qr.id}\r\n                id={qr.id}\r\n                alias={qr.alias}\r\n                url={qr.url}\r\n                short_url={qr.short_url}\r\n                scans={qr.scans}\r\n                fgColor={qr.fgColor}\r\n                bgColor={qr.bgColor}\r\n                size={qr.size}\r\n                onEdit={() => onEdit(qr)}\r\n                onDelete={() => onDelete(qr)}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          {/* Paginación */}\r\n          <div className=\"flex justify-center mt-6 space-x-4\">\r\n            <button\r\n              onClick={() => onPageChange(Math.max(page - 1, 1))}\r\n              disabled={page === 1}\r\n              className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n            >\r\n              Anterior\r\n            </button>\r\n            <span className=\"px-4 py-2 text-gray-700\">\r\n              Página {page} de {totalPages}\r\n            </span>\r\n            <button\r\n              onClick={() => onPageChange(Math.min(page + 1, totalPages))}\r\n              disabled={page === totalPages}\r\n              className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n            >\r\n              Siguiente\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p className=\"text-center text-gray-600 mt-6\">No hay códigos QR aún.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginatedQRGrid;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAC;EACvBC,IAAI,GAAG,EAAE;EACTC,OAAO;EACPC,IAAI;EACJC,UAAU;EACVC,YAAY;EACZC,MAAM;EACNC;AACF,CAAC,KAAK;EACJ,oBACEV,OAAA;IAAAW,QAAA,EACGN,OAAO,gBACNL,OAAA,CAACF,OAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GACTX,IAAI,CAACY,MAAM,GAAG,CAAC,gBACjBhB,OAAA,CAAAE,SAAA;MAAAS,QAAA,gBACEX,OAAA;QAAKiB,SAAS,EAAC,sDAAsD;QAAAN,QAAA,EAClEP,IAAI,CAACc,GAAG,CAAEC,EAAE,iBACXnB,OAAA,CAACH,UAAU;UAETuB,EAAE,EAAED,EAAE,CAACC,EAAG;UACVC,KAAK,EAAEF,EAAE,CAACE,KAAM;UAChBC,GAAG,EAAEH,EAAE,CAACG,GAAI;UACZC,SAAS,EAAEJ,EAAE,CAACI,SAAU;UACxBC,KAAK,EAAEL,EAAE,CAACK,KAAM;UAChBC,OAAO,EAAEN,EAAE,CAACM,OAAQ;UACpBC,OAAO,EAAEP,EAAE,CAACO,OAAQ;UACpBC,IAAI,EAAER,EAAE,CAACQ,IAAK;UACdlB,MAAM,EAAEA,CAAA,KAAMA,MAAM,CAACU,EAAE,CAAE;UACzBT,QAAQ,EAAEA,CAAA,KAAMA,QAAQ,CAACS,EAAE;QAAE,GAVxBA,EAAE,CAACC,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNf,OAAA;QAAKiB,SAAS,EAAC,oCAAoC;QAAAN,QAAA,gBACjDX,OAAA;UACE4B,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACqB,IAAI,CAACC,GAAG,CAACxB,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAE;UACnDyB,QAAQ,EAAEzB,IAAI,KAAK,CAAE;UACrBW,SAAS,EAAC,qEAAqE;UAAAN,QAAA,EAChF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTf,OAAA;UAAMiB,SAAS,EAAC,yBAAyB;UAAAN,QAAA,GAAC,YACjC,EAACL,IAAI,EAAC,MAAI,EAACC,UAAU;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACPf,OAAA;UACE4B,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACqB,IAAI,CAACG,GAAG,CAAC1B,IAAI,GAAG,CAAC,EAAEC,UAAU,CAAC,CAAE;UAC5DwB,QAAQ,EAAEzB,IAAI,KAAKC,UAAW;UAC9BU,SAAS,EAAC,qEAAqE;UAAAN,QAAA,EAChF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA,eACN,CAAC,gBAEHf,OAAA;MAAGiB,SAAS,EAAC,gCAAgC;MAAAN,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACkB,EAAA,GA3DI9B,eAAe;AA6DrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}