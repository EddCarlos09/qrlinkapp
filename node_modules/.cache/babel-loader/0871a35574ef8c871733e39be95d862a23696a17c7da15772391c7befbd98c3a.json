{"ast":null,"code":"var _jsxFileName = \"D:\\\\qrlinkapp\\\\src\\\\pages\\\\Folders.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Layout from '../components/Nav/Layout';\nimport CreateFolderModal from './Folder/CreateFolderModal';\nimport EditFolderModal from './Folder/EditFolderModal';\nimport PaginatedFolderGrid from '../components/Folder/PaginatedFolderGrid';\nimport ConfirmDeleteModal from '../components/utils/ConfirmDeleteModal';\nimport Toast from '../components/utils/Toast';\nimport Spinner from '../components/utils/Spinner';\nimport httpService from '../services/httpService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Folders = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [toastMsg, setToastMsg] = useState('');\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [folderToEdit, setFolderToEdit] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [folderToDelete, setFolderToDelete] = useState(null);\n  const [shouldReload, setShouldReload] = useState(false);\n\n  // Crear carpeta\n  const handleCreate = async newFolder => {\n    try {\n      setLoading(true);\n      const response = await httpService.post('/folder', {\n        folderName: newFolder.folderName\n      });\n      if (response.status === 201) {\n        setToastMsg('¡Carpeta creada exitosamente!');\n        setShouldReload(true);\n        setIsCreateModalOpen(false);\n      }\n    } catch (error) {\n      console.error('Error al crear carpeta:', error);\n      setToastMsg('¡Error al crear la carpeta!');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Editar carpeta\n  const handleEdit = folder => {\n    setFolderToEdit(folder);\n    setIsEditModalOpen(true);\n  };\n  const handleUpdate = async updatedFolder => {\n    try {\n      setLoading(true);\n      console.log(handleUpdate);\n      console.log(updatedFolder);\n      const response = await httpService.put(`/folder/${updatedFolder.id}`, updatedFolder);\n      if (response.status === 204) {\n        setToastMsg('¡Carpeta actualizada!');\n        setIsEditModalOpen(false);\n        setShouldReload(true);\n      }\n    } catch (error) {\n      console.error('Error al actualizar carpeta:', error);\n      setToastMsg('¡Error al actualizar la carpeta!');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Eliminar carpeta\n  const confirmDelete = folder => {\n    setFolderToDelete(folder);\n    setIsDeleteModalOpen(true);\n  };\n  const handleDeleteConfirmed = async () => {\n    if (!folderToDelete) return;\n    try {\n      setLoading(true);\n      const response = await httpService.delete(`/folder/${folderToDelete.id}`);\n      if (response.status === 200 || response.status === 204) {\n        setToastMsg('Carpeta eliminada');\n        setShouldReload(true);\n      }\n    } catch (error) {\n      console.error('Error al eliminar carpeta:', error);\n      setToastMsg('¡Error al eliminar la carpeta!');\n    } finally {\n      setIsDeleteModalOpen(false);\n      setFolderToDelete(null);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [toastMsg && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toastMsg,\n      onClose: () => setToastMsg('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 20\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n      isOpen: isCreateModalOpen,\n      onClose: () => setIsCreateModalOpen(false),\n      onCreate: handleCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditFolderModal, {\n      isOpen: isEditModalOpen,\n      onClose: () => setIsEditModalOpen(false),\n      onUpdate: handleUpdate,\n      folderToEdit: folderToEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDeleteModal, {\n      isOpen: isDeleteModalOpen,\n      onCancel: () => setIsDeleteModalOpen(false),\n      onConfirm: handleDeleteConfirmed,\n      elementName: folderToDelete === null || folderToDelete === void 0 ? void 0 : folderToDelete.folderName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-green-700\",\n        children: \"Carpetas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsCreateModalOpen(true),\n        className: \"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition\",\n        children: \"+ Crear Carpeta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginatedFolderGrid\n    // onEdit={handleEdit}\n    , {\n      onEdit: newName => handleUpdate({\n        ...folder,\n        folderName: newName\n      }),\n      onDelete: confirmDelete,\n      shouldReload: shouldReload,\n      onReloaded: () => setShouldReload(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Folders, \"bKXGSHfPEP7EKtO6HprZSykiV3M=\");\n_c = Folders;\nexport default Folders;\nvar _c;\n$RefreshReg$(_c, \"Folders\");","map":{"version":3,"names":["React","useState","Layout","CreateFolderModal","EditFolderModal","PaginatedFolderGrid","ConfirmDeleteModal","Toast","Spinner","httpService","jsxDEV","_jsxDEV","Folders","_s","loading","setLoading","toastMsg","setToastMsg","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","folderToEdit","setFolderToEdit","isDeleteModalOpen","setIsDeleteModalOpen","folderToDelete","setFolderToDelete","shouldReload","setShouldReload","handleCreate","newFolder","response","post","folderName","status","error","console","handleEdit","folder","handleUpdate","updatedFolder","log","put","id","confirmDelete","handleDeleteConfirmed","delete","children","message","onClose","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onCreate","onUpdate","onCancel","onConfirm","elementName","className","onClick","onEdit","newName","onDelete","onReloaded","_c","$RefreshReg$"],"sources":["D:/qrlinkapp/src/pages/Folders.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Layout from '../components/Nav/Layout';\r\nimport CreateFolderModal from './Folder/CreateFolderModal';\r\nimport EditFolderModal from './Folder/EditFolderModal';\r\nimport PaginatedFolderGrid from '../components/Folder/PaginatedFolderGrid'\r\nimport ConfirmDeleteModal from '../components/utils/ConfirmDeleteModal';\r\nimport Toast from '../components/utils/Toast';\r\nimport Spinner from '../components/utils/Spinner';\r\nimport httpService from '../services/httpService';\r\n\r\nconst Folders = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [toastMsg, setToastMsg] = useState('');\r\n\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n\r\n  const [folderToEdit, setFolderToEdit] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [folderToDelete, setFolderToDelete] = useState(null);\r\n\r\n  const [shouldReload, setShouldReload] = useState(false);\r\n\r\n  // Crear carpeta\r\n  const handleCreate = async (newFolder) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await httpService.post('/folder', {\r\n        folderName: newFolder.folderName\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        setToastMsg('¡Carpeta creada exitosamente!');\r\n        setShouldReload(true);\r\n        setIsCreateModalOpen(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al crear carpeta:', error);\r\n      setToastMsg('¡Error al crear la carpeta!');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Editar carpeta\r\n  const handleEdit = (folder) => {\r\n    setFolderToEdit(folder);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleUpdate = async (updatedFolder) => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(handleUpdate);\r\n      console.log(updatedFolder);\r\n      const response = await httpService.put(`/folder/${updatedFolder.id}`, updatedFolder);\r\n\r\n      if (response.status === 204) {\r\n        setToastMsg('¡Carpeta actualizada!');\r\n        setIsEditModalOpen(false);\r\n        setShouldReload(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al actualizar carpeta:', error);\r\n      setToastMsg('¡Error al actualizar la carpeta!');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Eliminar carpeta\r\n  const confirmDelete = (folder) => {\r\n    setFolderToDelete(folder);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirmed = async () => {\r\n    if (!folderToDelete) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await httpService.delete(`/folder/${folderToDelete.id}`);\r\n\r\n      if (response.status === 200 || response.status === 204) {\r\n        setToastMsg('Carpeta eliminada');\r\n        setShouldReload(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al eliminar carpeta:', error);\r\n      setToastMsg('¡Error al eliminar la carpeta!');\r\n    } finally {\r\n      setIsDeleteModalOpen(false);\r\n      setFolderToDelete(null);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {toastMsg && <Toast message={toastMsg} onClose={() => setToastMsg('')} />}\r\n      {loading && <Spinner />}\r\n\r\n      <CreateFolderModal\r\n        isOpen={isCreateModalOpen}\r\n        onClose={() => setIsCreateModalOpen(false)}\r\n        onCreate={handleCreate}\r\n      />\r\n      <EditFolderModal\r\n        isOpen={isEditModalOpen}\r\n        onClose={() => setIsEditModalOpen(false)}\r\n        onUpdate={handleUpdate}\r\n        folderToEdit={folderToEdit}\r\n      />\r\n      <ConfirmDeleteModal\r\n        isOpen={isDeleteModalOpen}\r\n        onCancel={() => setIsDeleteModalOpen(false)}\r\n        onConfirm={handleDeleteConfirmed}\r\n        elementName={folderToDelete?.folderName}\r\n      />\r\n\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-3xl font-bold text-green-700\">Carpetas</h1>\r\n        <button\r\n          onClick={() => setIsCreateModalOpen(true)}\r\n          className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition\"\r\n        >\r\n          + Crear Carpeta\r\n        </button>\r\n      </div>\r\n\r\n      <PaginatedFolderGrid\r\n        // onEdit={handleEdit}\r\n        onEdit={(newName) => handleUpdate({ ...folder, folderName: newName })}\r\n        onDelete={confirmDelete}\r\n        shouldReload={shouldReload}\r\n        onReloaded={() => setShouldReload(false)}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Folders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}