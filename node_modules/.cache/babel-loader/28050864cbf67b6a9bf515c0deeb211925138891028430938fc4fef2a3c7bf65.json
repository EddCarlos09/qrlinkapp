{"ast":null,"code":"var _jsxFileName = \"D:\\\\qrlinkapp\\\\src\\\\pages\\\\FolderDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Layout from '../components/Nav/Layout';\nimport PaginatedQRGrid from '../components/QR/PaginatedQRGrid';\nimport Spinner from '../components/utils/Spinner';\nimport httpService from '../services/httpService';\nimport Toast from '../components/utils/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // <-- folderId desde la URL\n  const [folder, setFolder] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Datos de QR paginados\n  const [qrCodes, setQrCodes] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [toastMsg, setToastMsg] = useState('');\n\n  // Cargar datos de la carpeta\n  const fetchFolder = async () => {\n    try {\n      const response = await httpService.get(`/folder/${id}`);\n      setFolder(response.data);\n    } catch (error) {\n      console.error('Error al obtener carpeta:', error);\n      setToastMsg('Error al obtener la carpeta');\n    }\n  };\n\n  // Cargar QR codes de la carpeta\n  const fetchQRCodes = async () => {\n    try {\n      setLoading(true);\n      const response = await httpService.get(`/qrlink/byfolder/${id}?page=${page}&pageSize=6`);\n      setQrCodes(response.data.data);\n      setTotalPages(response.data.totalPages);\n    } catch (error) {\n      console.error('Error al obtener QR codes:', error);\n      setToastMsg('Error al cargar códigos QR');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Editar QR\n  const handleEdit = qr => {\n    console.log('Editar:', qr);\n    // Aquí podrías abrir un modal de edición si lo necesitas\n  };\n  const handleDelete = async qr => {\n    try {\n      await httpService.delete(`/qrlink/${qr.id}`);\n      setToastMsg('QR eliminado');\n      fetchQRCodes();\n    } catch (error) {\n      console.error('Error al eliminar QR:', error);\n      setToastMsg('Error al eliminar QR');\n    }\n  };\n  useEffect(() => {\n    fetchFolder();\n  }, [id]);\n  useEffect(() => {\n    fetchQRCodes();\n  }, [page, id]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [toastMsg && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toastMsg,\n      onClose: () => setToastMsg('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-green-700\",\n        children: folder ? folder.folderName : 'Cargando carpeta...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Listado de c\\xF3digos QR en esta carpeta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginatedQRGrid, {\n      data: qrCodes,\n      loading: loading,\n      page: page,\n      totalPages: totalPages,\n      onPageChange: setPage,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(FolderDetail, \"mzD5fZ01C+tI7DS6QrezGnhzbWQ=\", false, function () {\n  return [useParams];\n});\n_c = FolderDetail;\nexport default FolderDetail;\nvar _c;\n$RefreshReg$(_c, \"FolderDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Layout","PaginatedQRGrid","Spinner","httpService","Toast","jsxDEV","_jsxDEV","FolderDetail","_s","id","folder","setFolder","loading","setLoading","qrCodes","setQrCodes","page","setPage","totalPages","setTotalPages","toastMsg","setToastMsg","fetchFolder","response","get","data","error","console","fetchQRCodes","handleEdit","qr","log","handleDelete","delete","children","message","onClose","fileName","_jsxFileName","lineNumber","columnNumber","className","folderName","onPageChange","onEdit","onDelete","_c","$RefreshReg$"],"sources":["D:/qrlinkapp/src/pages/FolderDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Layout from '../components/Nav/Layout';\r\nimport PaginatedQRGrid from '../components/QR/PaginatedQRGrid';\r\nimport Spinner from '../components/utils/Spinner';\r\nimport httpService from '../services/httpService';\r\nimport Toast from '../components/utils/Toast';\r\n\r\nconst FolderDetail = () => {\r\n  const { id } = useParams(); // <-- folderId desde la URL\r\n  const [folder, setFolder] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Datos de QR paginados\r\n  const [qrCodes, setQrCodes] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  const [toastMsg, setToastMsg] = useState('');\r\n\r\n  // Cargar datos de la carpeta\r\n  const fetchFolder = async () => {\r\n    try {\r\n      const response = await httpService.get(`/folder/${id}`);\r\n      setFolder(response.data);\r\n    } catch (error) {\r\n      console.error('Error al obtener carpeta:', error);\r\n      setToastMsg('Error al obtener la carpeta');\r\n    }\r\n  };\r\n\r\n  // Cargar QR codes de la carpeta\r\n  const fetchQRCodes = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await httpService.get(`/qrlink/byfolder/${id}?page=${page}&pageSize=6`);\r\n      setQrCodes(response.data.data);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {\r\n      console.error('Error al obtener QR codes:', error);\r\n      setToastMsg('Error al cargar códigos QR');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Editar QR\r\n  const handleEdit = (qr) => {\r\n    console.log('Editar:', qr);\r\n    // Aquí podrías abrir un modal de edición si lo necesitas\r\n  };\r\n\r\n  const handleDelete = async (qr) => {\r\n    try {\r\n      await httpService.delete(`/qrlink/${qr.id}`);\r\n      setToastMsg('QR eliminado');\r\n      fetchQRCodes();\r\n    } catch (error) {\r\n      console.error('Error al eliminar QR:', error);\r\n      setToastMsg('Error al eliminar QR');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFolder();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    fetchQRCodes();\r\n  }, [page, id]);\r\n\r\n  return (\r\n    <Layout>\r\n      {toastMsg && <Toast message={toastMsg} onClose={() => setToastMsg('')} />}\r\n      {/* {loading && <Spinner />} */}\r\n\r\n      <div className=\"mb-6\">\r\n        <h1 className=\"text-3xl font-bold text-green-700\">\r\n          {folder ? folder.folderName : 'Cargando carpeta...'}\r\n        </h1>\r\n        <p className=\"text-gray-600\">Listado de códigos QR en esta carpeta</p>\r\n      </div>\r\n\r\n      <PaginatedQRGrid\r\n        data={qrCodes}\r\n        loading={loading}\r\n        page={page}\r\n        totalPages={totalPages}\r\n        onPageChange={setPage}\r\n        onEdit={handleEdit}\r\n        onDelete={handleDelete}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FolderDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}